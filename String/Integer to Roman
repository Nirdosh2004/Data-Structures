class Solution {
public:
    string intToRoman(int num) {
        /*
        Time  = O(log (base(10)(n)).
        space = O(log (base(10)(n)).
            Roman numeral symbols and their corresponding values:
            1 = I
            5 = V
            10 = X
            50 = L
            100 = C
            500 = D
            1000 = M
        */
        string ans = ""; // Initialize an empty string to store the Roman numeral representation
        // Start converting the number to Roman numerals
        while(num >= 1000){
            ans += "M";
            num -= 1000;
        }
        while(num >= 900){
            ans += "CM";
            num -= 900;
        }
        while(num >= 500){
            ans += "D";
            num -= 500;
        }
        while(num >= 400){
            ans += "CD";
            num -= 400;
        }
        while(num >= 100){
            ans += "C";
            num -= 100;
        }
        while(num >= 90){
            ans += "XC";
            num -= 90;
        }
        while(num >= 50){
            ans += "L";
            num -= 50;
        }
        while(num >= 40){
            ans += "XL";
            num -= 40;
        }
        while(num >= 10){
            ans += "X";
            num -= 10;
        }
        while(num >= 9){
            ans += "IX";
            num -= 9;
        }
        while(num >= 5){
            ans += "V";
            num -= 5;
        }
        while(num >= 4){
            ans += "IV";
            num -= 4;
        }
        while(num >= 1){
            ans += "I";
            num -= 1;
        }
        return ans; // Return the Roman numeral representation
    }
};
